# str(string) : 숫자의 합이 아닌 단순 이어쓰기로 하고 싶을때 
    #   숫자를 문자열의 상태로 변경함.
# password = my_str[:3]+ str(len(my_str))+ str(my_str.count("e"))+"!"
# str이 없다면 + 가 되어 앞에 숫자에 더하기가 되어버린다.
# -------------------------------------------------------------------------
# int(integer) : 정수로 변경하고 싶을때
# float : 실수로 변경하고 싶을때 
# -------------------------------------------------------------------------
# .format : .format (  ) 괄호부분에 문자를 {0} 에 추가시키는 기능
# print("{0} 의 비밀번호는 {1} 입니다.".format(url, password))
# {0} 에는 url 이 {1}에는 password 부분이 추가됨
# -------------------------------------------------------------------------
# index : 리스트, 문자형자료, 튜플 등이 포함된 내장 함수로 사용
#         문자열이나 리스트, 튜플 속에 있는 자료의 위치(index)를 찾아 줌.
# my_str = my_str[:my_str.index(".")] # 규칙 2 (naver 뒤 점부터 제외)
# index 로 . 의 위치를 찾으라고 하였고 [:] 에서 뒤에 없애라는 명령이기때문에
# 문제 3번에서 . 이 삭제되는 이유 / index는 위치를 찾는 함수
# --------------------------------------------------------------------------
# randrange : 1 부터 설정한 숫자 이전까지 출력  / ex) randrange(1, 46)
# randint : 1 부터 설정한 숫자까지 출력 /  ex) randint(1, 46)
# range : 연속된 숫자(정수)를 만들어 주는 함수/ range(1, 21) 마지막 숫자는 출력 x
# replace : 입력한 문자를 다른 문자로 변경 / ex) print(python.replace("Python", "java")) 
# %s : 문자열 포맷 / ex : "나는 %s을 좋아해요" % "파이썬"
# --------------------------------------------------------------------------
# del : 함수가 아니라 예약어이며 함수와 같이 사용할 수 없다. / del 변수 []
# --------------------------------------------------------------------------
# strip : 문자열 양옆 공백제거 / istrip: 문자열 왼쪽 공백 제거 / rstrip: 문자열 오른쪽 공백제거
# --------------------------------------------------------------------------
# 문자열 구성 파악 : is OO
# isalnum: 문자열이 알파벳 또는 숫자로만 구성되어있는지 확인 / isalpha :문자열이 알파벳으로만 구성되어있는지확인
# isidentifier : 문자열이 식별자로 사용할 수 있는 것인지 확인 / isdecimal: 문자열이 정수 형태인지 확인
# isdigit: 문자열이 숫자로 인식될 수 있는 것인지 확인 / isspace: 문자열이 공백으로만 구성되어있는지 확인
# islower: 문자열이 소문자로만 구성되어있는지 확인 / isupper: 문자열이 대문자로만 구성되어 있는지 확인
# --------------------------------------------------------------------------
# from 000 import 0000 : ex) from 6.if형.py import list  : 6.if 형에 있는 list변수를 다른 곳에서 받는것.
# --------------------------------------------------------------------------
# return